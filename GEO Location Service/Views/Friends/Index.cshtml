@model IEnumerable<GEO_Location_Service.Models.Friends>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Let)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Lon)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Let)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Lon)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div id="map" style="width:100%; height:500px"></div>

<script src="~/lib/leaflet/leaflet.js"></script>
<script src="~/lib/leaflet/leaflet.min.js"></script>

<script>
    var map = L.map('map').setView([22.806284, 89.553149], 13);

    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    var friendIcons = [
        L.icon({
            iconUrl: 'Icons/3001764.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
        }),
        L.icon({
            iconUrl: 'Icons/146031.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
        }),
        L.icon({
            iconUrl: 'icons/man_person17.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
        })
    ];

    // Automatically show user's current location on page load
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function (position) {
            var lat = position.coords.latitude;
            var lon = position.coords.longitude;

            map.setView([lat, lon], 13);

            L.marker([lat, lon], {
                icon: L.icon({
                    iconUrl: 'icons/profile-pic (10).png',
                    iconSize: [25, 41],
                    iconAnchor: [12, 41],
                    popupAnchor: [1, -34],
                })
            }).addTo(map)
                .bindPopup('Me')
                .openPopup();
        }, function () {
            alert('Geolocation failed.');
        });
    } else {
        alert('Geolocation is not supported by this browser.');
    }

    // Loop through friends data
    @foreach (var friend in Model)
    {
        <text>
            L.marker([@friend.Let, @friend.Lon], { icon: friendIcons[@friend.Id % friendIcons.length] })
                .addTo(map)
                .bindPopup('@friend.Name')
                .openPopup();
        </text>
    }
</script>










